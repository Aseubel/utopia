<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aseubel.infrastructure.dao.UserMapper">

    <insert id="addUser">
        insert into `user` (user_id)
        values (#{userId})
    </insert>

    <update id="updateUser">
        update `user`
        <set>
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="realName != null">real_name = #{realName},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
            <if test="signature != null">signature = #{signature},</if>
            <if test="schoolCode != null and schoolCode != ''">school_code = #{schoolCode},</if>
        </set>
        where user_id = #{userId} and is_deleted = 0
    </update>

    <update id="deleteUserByUserId">
        update `user`
        set is_deleted = 1
        where user_id = #{userId} and is_deleted = 0
    </update>

    <select id="getUserByUserId" resultType="com.aseubel.infrastructure.dao.po.User">
        select id, user_id, user_name, real_name, phone, gender, avatar, signature, create_time, update_time, school_code
        from `user`
        where user_id = #{userId} and is_deleted = 0
    </select>

    <select id="listUserBaseInfoByUserIds" resultType="com.aseubel.infrastructure.dao.po.User">
        select user_id, user_name, avatar, school_code
        from `user`
        where is_deleted = 0 and user_id in
        <foreach collection="userIds" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <select id="getUserStatusByUserId" resultType="com.aseubel.infrastructure.dao.po.User">
        select id, user_id
        from `user`
        where user_id = #{userId} and is_deleted = 0
    </select>

    <select id="CountStudentBySchoolCode" resultType="java.lang.Integer">
        select count(*)
        from `user`
        where school_code = #{schoolCode} and is_deleted = 0
    </select>

    <select id="getUserNameByUserId" resultType="java.lang.String">
        select user_name
        from `user`
        where user_id = #{userId} and is_deleted = 0
    </select>

</mapper>