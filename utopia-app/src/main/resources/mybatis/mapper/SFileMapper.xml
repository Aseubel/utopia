<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aseubel.infrastructure.dao.SFileMapper">

    <insert id="addSFile">
        insert into `sfile` (sfile_id, sfile_name, sfile_url, sfile_size, course_name, create_by, update_by)
        values (#{sfileId}, #{sfileName}, #{sfileUrl}, #{sfileSize}, #{courseName}, #{createBy}, #{updateBy})
    </insert>

    <delete id="deleteRepeatedSFile">
        DELETE FROM `sfile`
        WHERE id NOT IN (
            SELECT id
            FROM (
                     SELECT id
                     FROM sfile
                     WHERE (sfile_url, create_time) IN (
                         SELECT sfile_url, MAX(create_time)
                         FROM sfile
                         GROUP BY sfile_url
                     )
                 ) AS temp
        )
    </delete>

    <update id="deleteByUrl">
        update `sfile` set is_deleted = 1
        where sfile_url = #{fileUrl}
    </update>

    <update id="deleteMissingSFile">
        update `sfile` set is_deleted = 1
        where id in
        <foreach collection="fileIds" item="fileId" open="(" separator="," close=")">
            #{fileId}
        </foreach>
    </update>

    <update id="incrementDownloadCount">
        update `sfile` set download_count = download_count + 1
        where sfile_id = #{fileId}
    </update>

    <select id="listSFile" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name, create_by, update_by, create_time, update_time
        from `sfile`
        <where>
            id > (select id from `sfile` where sfile_id = #{fileId} and is_deleted = 0)
            <if test="courseName!= null and courseName != ''">and course_name=#{courseName}</if>
            and is_deleted = 0
        </where>
        order by
        <if test="sortType == 0 or sortType == null">id</if>
        <if test="sortType == 1">download_count DESC, id</if>
        <if test="sortType == 2">download_count, id</if>
        limit #{limit}
    </select>

    <select id="listSFileAhead" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name, create_by, update_by, create_time, update_time
        from `sfile`
        <where>
            <if test="courseName!= null and courseName != ''">and course_name=#{courseName}</if>
            and is_deleted = 0
        </where>
        order by
        <if test="sortType == 0 or sortType == null">id</if>
        <if test="sortType == 1">download_count DESC, id</if>
        <if test="sortType == 2">download_count, id</if>
        limit #{limit}
    </select>

    <select id="listSFileByTypeId" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name, create_by, update_by, create_time, update_time
        from `sfile`
        <where>
            id > (select id from `sfile` where sfile_id = #{fileId} and is_deleted = 0)
            <if test="courseName!= null and courseName != ''">and course_name=#{courseName}</if>
            and is_deleted = 0
        </where>
        order by id DESC
        limit #{limit}
    </select>

    <select id="listSFileByTypeIdAhead" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name, create_by, update_by, create_time, update_time
        from `sfile`
        <where>
            <if test="courseName!= null and courseName != ''">and course_name=#{courseName}</if>
            and is_deleted = 0
        </where>
        order by id DESC
        limit #{limit}
    </select>

    <select id="listAllSFile" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_url
        from `sfile`
    </select>

    <select id="getSFileBySFileId" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name, create_by, update_by, create_time, update_time
        from `sfile`
        where sfile_id = #{fileId} and is_deleted = 0
    </select>

    <select id="getSFileBySFileUrl" resultType="com.aseubel.infrastructure.dao.po.SFile">
        select id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name, create_by, update_by, create_time, update_time
        from `sfile`
        where sfile_url = #{fileUrl} and is_deleted = 0
    </select>

    <select id="listPartialFileBase" resultType="com.aseubel.infrastructure.dao.po.SFile">
        SELECT id, sfile_id, sfile_name, sfile_url, sfile_size, download_count, course_name
        FROM `sfile`
        WHERE is_deleted = 0
        <if test="fileId != null">AND id > #{fileId}</if>
        limit #{pageSize}
    </select>

</mapper>