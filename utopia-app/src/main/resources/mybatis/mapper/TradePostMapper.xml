<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aseubel.infrastructure.dao.TradePostMapper">

    <insert id="addTradePost">
        insert into `trade_post` (trade_post_id, user_id, title, content, price, type)
        values (#{tradePostId}, #{userId}, #{title}, #{content}, #{price}, #{type})
    </insert>

    <update id="updateTradePost">
        update `trade_post`
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="price != null">price  = #{price},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
        </set>
        where trade_post_id = #{tradePostId} and is_deleted = 0
    </update>

    <update id="deleteTradePostByPostId">
        update `trade_post` set is_deleted = 1 where trade_post_id = #{postId}
    </update>

    <update id="relateTradePostImage">
        insert `post_image` (post_id, image_id)
        values
        <foreach collection="images" item="image" separator=",">
            (#{postId}, #{image.imageId})
        </foreach>
    </update>

    <select id="getTradePostByPostId" resultType="com.aseubel.infrastructure.dao.po.TradePost">
        select id, trade_post_id, user_id, title, content, price, type, status, create_time, update_time
        from `trade_post`
        where trade_post_id = #{postId} and is_deleted = 0
    </select>

    <select id="listTradePost" resultType="com.aseubel.infrastructure.dao.po.TradePost">
        select id, trade_post_id, user_id, title, content, price, type, status, create_time, update_time
        from `trade_post`
        where update_time &lt;= (select update_time from `trade_post` where trade_post_id = #{postId} and is_deleted = 0)
          and is_deleted = 0 and trade_post_id != #{postId}
        order by update_time DESC, id DESC
        limit #{limit}
    </select>

    <select id="listTradePostAhead" resultType="com.aseubel.infrastructure.dao.po.TradePost">
        select id, trade_post_id, user_id, title, content, price, type, status, create_time, update_time
        from `trade_post`
        where is_deleted = 0
        order by update_time DESC
        limit #{limit}
    </select>

    <select id="getPostFirstImage" resultType="java.lang.String">
        select image_id
        from `post_image`
        where post_id = #{postId} and is_deleted = 0
        limit 1
    </select>

</mapper>